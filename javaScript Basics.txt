JavaScipt

js allow us to create new objects.

Object:{
	name: 'Netflix, Inc.',
	price: 123.90,
	symbol: 'NFLX'
}

you can also use "" quotes instead of '' quotes.
usually in javaScript it doesnt matter but if you are dealing with JSON format
where it allow us to store HIERICAl data inside of an object.
we use specifically "" in JSON format.

DOM(Documunt Object Model) is a fancy way of saying tree starting with a root node.

It has a ability to run multiple things can happen at a same time.
In JS we have the ability to control CSS. 


-> anonymous functions also known as lambda functions:
	function that have no names
dom1.html is an expale of anonymous fuction


-> Callbacks:
	callbacks are just function that have been configured to be call at a certain
	point in time when something happens.

-> Ajax:
	that allow us to query from browser, a server to get a more data even after 
	the original page has been loaded. or

	to make additional HTTP requests from browser to server, without Reloading the whole page.
	
	Ajax use raw data(JSON) that we have programaticaly requested from browser 
	to server, after the original web page is already loaded, because we have to 	
	bring MORE DATA for the users. 


Local Storage:
	in users browser so they dont have to remember on server side.


HOW JS WORKS BEHIND THE HOOD? Mostly Theory
	
	JS run on JS Engine which every browser has have such as chrome v8 for chrome.
	Inside an JS engine we have thing called Parser read codes line by line (knows JS rules and known how it should be written in order tobe correct)
	If everything is correct it make Abstract Syntax Tree which convert into Machine Code.

Execution Context:
	
	A container which stores variables and in which a piece of our code is evaluated and executed.
	By Default is Global Execution context i.e it is associated with global object
	In browser thats the Window object.
	
	Execution context works in a form of execution stacks. 

Execution context contain three things
	1. Variable Objects -> Conatian fucntion argument, variable declartion ,function declation
	2. Scope chain -> variable objects as well as all its parents
	3. .this

	

 